// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}


model User {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  userName  String
  image String?
  aboutUser String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Post[]
  comments Comment[]
  favoritePosts FavoritePostByUser[]
}


model Post {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  subtitle  String?
  content   String?
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String @db.ObjectId
  comments Comment[]
  likes FavoritePostByUser[]
}


model Comment {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author    User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String @db.ObjectId

  post    Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  String @db.ObjectId
}

model FavoritePostByUser {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([postId, userId])
}
